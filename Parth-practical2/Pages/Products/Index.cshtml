@page
@model Parth_practical2.IndexModel

@{
    ViewData["Title"] = "Index";
}

<partial name="_Notification">
    <div class="col-md-12 d-flex justify-content-center">
        <h1>Product List</h1>
    </div>
    <div class="index-bg">
        <div class="row mb-2">
  
    <hr />

   <div class="col-md-1"></div>


    <div class="col-md-10 d-flex justify-content-between align-items-center">
            <select id="myInput" onchange="myFunction()" class="form-control w-25" asp-items="ViewBag.CategoryId">
                <option disabled selected>--Search By Category--</option>
            </select>
        <form  asp-page="Index" method="get">
            <div class="row">
                <div class="col-md-12">
                    <input type="text" id="searchInput" name="searchString" placeholder="Search...">
                    <button class="btn btn-dark" type="submit">Search</button>
                </div>
            </div>
        </form>
        <a class="btn btn-primary" asp-page="Create">Create New</a>
    </div>
    <div class="col-1"></div>
   
</div>

    



<table class="table table-striped table-bordered bg-light">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Description)
            </th>
            <th>
                Status
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].ModifiedOn)
            </th>
          
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Category)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="dataTable">
@foreach (var item in Model.Product) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modeItem => item.Description)
            </td>
                <td>@(item.IsActive ? "Active" : "Inactive")</td>
                <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
               <td>
                    @if (item.ModifiedOn.Year < 2001)
                    {
                        @:Product is not modified
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.ModifiedOn)
                    }
               </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td class="btn-group w-100">
                    <a class="btn btn-outline-success" asp-page="./Edit" asp-route-id="@item.productId">Edit</a> 
                <a class="btn btn-outline-info" asp-page="./Details" asp-route-id="@item.productId">Details</a> 
                <a class="btn btn-outline-danger" asp-page="./Delete" asp-route-id="@item.productId">Delete</a>
                    <form  method="post" asp-page-handler="ToggleStatus" asp-route-id="@item.productId">
                        <input type="submit" class="btn btn-outline-dark " value="Status" />
                    </form>

            </td>
        </tr>
}
    </tbody>
</table>
</div>

    <script>
        function myFunction() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("dataTable");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[7];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>


<style>

   
        .table {
            margin: 20px auto;
            width: 90%;
            border-collapse: collapse;
            border-spacing: 0;
        }


            .table thead tr th {
                background-color: #343a40;
                color: #fff;
                border: 1px solid #dee2e6;
                font-weight: bold;
                padding: 10px;
            }

            .table tbody tr td {
                border: 1px solid #dee2e6;
                padding: 10px;
            }

            .table tbody tr {
                transition: background-color 0.3s ease-in-out;
            }



                .table tbody tr td {
                    margin-right: 5px;
                    color: black;
                }

                    .table tbody tr td a:hover {
                        color: white;
                    }

            .table th, .table td {
                vertical-align: middle;
            }

            .table thead th {
                text-align: center;
                font-weight: bold;
                background-color: #f2f2f2;
            }

            .table tbody tr:nth-child(even) {
                background-color: #f9f9f9;
            }

            .table tbody tr:nth-child(odd) {
                background-color: #f8f8f8;
            }
</style>
