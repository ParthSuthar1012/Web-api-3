@model practical1.Models.Category


@{
    ViewData["Title"] = "Edit";
}

<div class="row ">
    <div class="col-md-3"></div>
    <div class="col-md-6 form-add">
<h1>Edit Category</h1>
<hr />
        <form class="row g-3" asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CategoryId" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="CreatedOn" class="control-label"></label>
                <input asp-for="CreatedOn" class="form-control" readonly/>
                <span asp-validation-for="CreatedOn" class="text-danger"></span>
            </div>               
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
            <a asp-action="Index">Back to List</a>
    
</div>

</div>
    


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
